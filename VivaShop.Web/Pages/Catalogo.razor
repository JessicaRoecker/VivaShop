@page "/produtos"
@inject IProdutoService produtoService

@if (Produtos == null)
{
	<ExibirSpinner />
}
else
{
	<h3 class="mt-3">Produtos</h3>
	@if (Produtos.Count() > 0)
	{
		var produtosCategoria = from produto in Produtos
								group produto by produto.CategoriaId into produtoPorCaCatGroup
								orderby produtoPorCaCatGroup.Key
								select produtoPorCaCatGroup;

		@foreach(var prodGrup in produtosCategoria)
		{
			<h4>@prodGrup.FirstOrDefault()?.CategoriaNome</h4>
			<div class="row row-cols-1 row-cols-md-4 g-3">
				<ExibirProdutos Produtos="@prodGrup"></ExibirProdutos>
			</div>
			<hr class="mb-2"/>
			<br />
			<br />
			<br />
			<br />
		}

	}
}


@code {

	public IEnumerable<ProdutoDto>? Produtos { get; set; }

	[Inject]
	public ICarrinhoCompraService carrinhoCompraService { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Produtos = await produtoService.GetItens();

		var carrinhoCompraItens = await carrinhoCompraService.GetItems(UsuarioLogado.UsuarioId);
		var totalQuantidade = carrinhoCompraItens.Sum(i => i.QuantidadeId);

		carrinhoCompraService.RaiseEventoCarrinhoCompraChanged(totalQuantidade);
	}

}
